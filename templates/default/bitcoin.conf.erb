# bitcoin.conf configuration file. Lines beginning with # are comments.


# Network-related settings:

# Run on the test network instead of the real bitcoin network.
testnet=<%= @bitcoind_testnet %>
irc=<%= @bitcoind_irc %>
dnsseed=<%= @bitcoind_dnsseed %>
upnp=<%= @bitcoind_upnp %>

# Connect via a socks4 proxy
#proxy=127.0.0.1:9050

# Use as many addnode= settings as you like to connect to specific peers
#addnode=69.164.218.197
#addnode=10.0.0.2:8333

# ... or use as many connect= settings as you like to connect ONLY
# to specific peers:
#connect=69.164.218.197
#connect=10.0.0.1:8333

txindex=<%= @bitcoind_txindex %>

# Maximum number of inbound+outbound connections.
#maxconnections=

listen=<%= @bitcoind_listen %>


# JSON-RPC options (for controlling a running Bitcoin/bitcoind process)

# server=1 tells Bitcoin to accept JSON-RPC commands.
server=<%= @bitcoind_server %>

# You must set rpcuser and rpcpassword to secure the JSON-RPC api
<% unless @bitcoind_rpcuser.nil? -%>
rpcuser=<%= @bitcoind_rpcuser %>
<% end -%>
<% unless @bitcoind_rpcpassword.nil? -%>
rpcpassword=<%= @bitcoind_rpcpassword %>
<% end -%>

# By default, only RPC connections from localhost are allowed.  Specify
# as many rpcallowip= settings as you like to allow connections from
# other hosts (and you may use * as a wildcard character):
#rpcallowip=10.1.1.34
#rpcallowip=192.168.1.*
<% unless @bitcoind_rpcallowip.nil? || !@bitcoind_rpcallowip -%>
  <% @bitcoind_rpcallowip.each do |addr| -%>
rpcallowip=<%= addr %>
  <% end -%>
<% end -%>

# Listen for RPC connections on this TCP port:
<% unless @bitcoind_rpcport.nil? -%>
rpcport=<%= @bitcoind_rpcport %>
<% end -%>

# Listen for P2P connections on this TCP port:
<% unless @bitcoind_port.nil? -%>
port=<%= @bitcoind_port %>
<% end -%>

# You can use Bitcoin or bitcoind to send commands to Bitcoin/bitcoind
# running on another host using this option:
<% unless @bitcoind_rpcconnect.nil? || !@bitcoind_rpcconnect -%>
  <% @bitcoind_rpcconnect.each do |addr| -%>
rpcconnect=<%= addr %>
  <% end -%>
<% end -%>


# Use Secure Sockets Layer (also known as TLS or HTTPS) to communicate
# with Bitcoin -server or bitcoind
rpcssl=<%= @bitcoind_rpcssl %>

# OpenSSL settings used when rpcssl=1
#rpcsslciphers=TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH
<% unless @bitcoind_rpcsslcertificatechainfile.nil? || !@bitcoind_rpcsslcertificatechainfile -%>
rpcsslcertificatechainfile=<%= @bitcoind_rpcsslcertificatechainfile %>
<% end -%>
<% unless @bitcoind_rpcsslprivatekeyfile.nil? || !@bitcoind_rpcsslprivatekeyfile -%>
rpcsslprivatekeyfile=<%= @bitcoind_rpcsslprivatekeyfile %>
<% end -%>


# Miscellaneous options

# Set gen=1 to attempt to generate bitcoins
gen=<%= @bitcoind_gen %>

# Use SSE instructions to try to generate bitcoins faster.
#4way=1

# Pre-generate this many public/private key pairs, so wallet backups will be valid for
# both prior transactions and several dozen future transactions.
#keypool=100

# Pay an optional transaction fee every time you send bitcoins.  Transactions with fees
# are more likely than free transactions to be included in generated blocks, so may
# be validated sooner.
#paytxfee=0.00

# Allow direct connections for the 'pay via IP address' feature.
#allowreceivebyip=1

<% unless @bitcoind_alertnotify.nil? || !@bitcoind_alertnotify -%>
alertnotify=echo %s | mail -s "Bitcoin Alert" <%= @bitcoind_alertnotify %>
<% end -%>

<% unless @bitcoind_checkblocks.nil? || !@bitcoind_checkblocks -%>
checkblocks=<%= @bitcoind_checkblocks %>
<% end -%>
